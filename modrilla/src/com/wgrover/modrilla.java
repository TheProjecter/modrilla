/*
 * modrilla.java
 *
 * Created on July 13, 2007, 8:53 PM
 */

package com.wgrover;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JTabbedPane;

/**
 *
 * @author  wgrover
 */
public class modrilla extends javax.swing.JFrame {
    
    /** Creates new form modrilla */
    public modrilla() {
        initComponents();
        previousButton.setEnabled(false);
        nextButton.setEnabled(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jFileChooser1 = new javax.swing.JFileChooser();
        aboutDialog = new javax.swing.JDialog();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        setupPanel = new javax.swing.JPanel();
        setupLabel = new javax.swing.JLabel();
        alignmentModeLabel = new javax.swing.JLabel();
        alignmentModeCombo = new javax.swing.JComboBox();
        millUnitsLabel = new javax.swing.JLabel();
        millUnitsCombo = new javax.swing.JComboBox();
        unitsLabel = new javax.swing.JLabel();
        unitsCombo = new javax.swing.JComboBox();
        outputFileFormatLabel = new javax.swing.JLabel();
        outputFileFormatCombo = new javax.swing.JComboBox();
        aboutButton = new javax.swing.JButton();
        drillNickPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        alignToNickPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        DXFmarksPanel = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        xDXFa1Field = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        yDXFa1Field = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        millMarksPanel = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        xMODa1Label = new javax.swing.JLabel();
        xMODa1Field = new javax.swing.JTextField();
        xMODa1UnitsLabel = new javax.swing.JLabel();
        yMODa1Label = new javax.swing.JLabel();
        yMODa1Field = new javax.swing.JTextField();
        yMODa1UnitsLabel = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        xMODa2Label = new javax.swing.JLabel();
        xMODa2Field = new javax.swing.JTextField();
        xMODa2UnitsLabel = new javax.swing.JLabel();
        yMODa2Label = new javax.swing.JLabel();
        yMODa2Field = new javax.swing.JTextField();
        yMODa2UnitsLabel = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        waferThicknessField = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        overdrillField = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        peckDistanceField = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        zSpeedField = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        repeatsField = new javax.swing.JTextField();
        serialDeviceLabel = new javax.swing.JLabel();
        serialDeviceField = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        zDrillSpeedField = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        selectInputFileButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        inputFileTextArea = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        inputPlot = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel54 = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();

        jTextArea7.setColumns(20);
        jTextArea7.setLineWrap(true);
        jTextArea7.setRows(5);
        jTextArea7.setText("Modrilla v2.0\n\nCopyright (c) 2007 Will Grover\n\nBased in part on 'dxf2fgc' copyright (c) 2007 Will Grover.  http://wgrover.com/dxf2fgc\n\nBased in part on 'cam.py' copyright (c) 2006 Neil Gershenfeld, Massachusetts Institute of Technology.  Permission granted for experimental and personal use; license for commercial sale available from MIT. http://cba.mit.edu/~neilg/fab/dist/\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n");
        jTextArea7.setWrapStyleWord(true);
        jScrollPane8.setViewportView(jTextArea7);

        org.jdesktop.layout.GroupLayout aboutDialogLayout = new org.jdesktop.layout.GroupLayout(aboutDialog.getContentPane());
        aboutDialog.getContentPane().setLayout(aboutDialogLayout);
        aboutDialogLayout.setHorizontalGroup(
            aboutDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(aboutDialogLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                .addContainerGap())
        );
        aboutDialogLayout.setVerticalGroup(
            aboutDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(aboutDialogLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Modrilla");
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        setupLabel.setText("<html>j; sj;l kjas fjs; dlfjs; kfjs ;dfj; as;fj skdj fs;dfj s;klf djslk jdf;s kjf; sd</html>");
        setupLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        alignmentModeLabel.setText("Alignment mode:");

        alignmentModeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Microscope alignment", "Drill bit alignment" }));

        millUnitsLabel.setText("Mill units:");

        millUnitsCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Millimeters", "Microns", "Inches", "Mils" }));

        unitsLabel.setText("Input DXF file units:");

        unitsCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Millimeters", "Microns", "Centimeters", "Inches", "Mils", "Steps" }));

        outputFileFormatLabel.setText("Output file format:");

        outputFileFormatCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "G-code", "Roland Modela" }));

        aboutButton.setText("About modrilla...");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout setupPanelLayout = new org.jdesktop.layout.GroupLayout(setupPanel);
        setupPanel.setLayout(setupPanelLayout);
        setupPanelLayout.setHorizontalGroup(
            setupPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, setupPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(setupPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, setupLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, setupPanelLayout.createSequentialGroup()
                        .add(outputFileFormatLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(outputFileFormatCombo, 0, 216, Short.MAX_VALUE))
                    .add(aboutButton)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, setupPanelLayout.createSequentialGroup()
                        .add(unitsLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(unitsCombo, 0, 211, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, setupPanelLayout.createSequentialGroup()
                        .add(millUnitsLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(millUnitsCombo, 0, 262, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, setupPanelLayout.createSequentialGroup()
                        .add(alignmentModeLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(alignmentModeCombo, 0, 226, Short.MAX_VALUE)))
                .addContainerGap())
        );
        setupPanelLayout.setVerticalGroup(
            setupPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, setupPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(setupLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(setupPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(alignmentModeLabel)
                    .add(alignmentModeCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(setupPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(millUnitsLabel)
                    .add(millUnitsCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(setupPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(unitsLabel)
                    .add(unitsCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(setupPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(outputFileFormatLabel)
                    .add(outputFileFormatCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(aboutButton)
                .addContainerGap())
        );
        jTabbedPane1.addTab("Setup", setupPanel);

        jLabel8.setText("Z:");

        jLabel9.setText("millimeters");

        jTextField1.setText("45");

        jLabel41.setText("Y:");

        jTextField2.setText("34");

        jLabel46.setText("millimeters");

        jLabel47.setText("X:");

        jTextField3.setText("23");

        jLabel48.setText("millimeters");

        jLabel49.setText("<html>j; sj;l kjas fjs; dlfjs; kfjs ;dfj; as;fj skdj fs;dfj s;klf djslk jdf;s kjf; sd</html>");
        jLabel49.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        org.jdesktop.layout.GroupLayout drillNickPanelLayout = new org.jdesktop.layout.GroupLayout(drillNickPanel);
        drillNickPanel.setLayout(drillNickPanelLayout);
        drillNickPanelLayout.setHorizontalGroup(
            drillNickPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, drillNickPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(drillNickPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel49, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, drillNickPanelLayout.createSequentialGroup()
                        .add(jLabel8)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel9))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, drillNickPanelLayout.createSequentialGroup()
                        .add(jLabel41)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel46))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, drillNickPanelLayout.createSequentialGroup()
                        .add(jLabel47)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel48)))
                .addContainerGap())
        );
        drillNickPanelLayout.setVerticalGroup(
            drillNickPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, drillNickPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel49, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(drillNickPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel47)
                    .add(jLabel48)
                    .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(drillNickPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel41)
                    .add(jLabel46)
                    .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(drillNickPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(jLabel9)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jTabbedPane1.addTab("Drill nick", drillNickPanel);

        jLabel10.setText("X:");

        jTextField4.setText("87");

        jLabel11.setText("millimeters");

        jLabel12.setText("Y:");

        jLabel13.setText("millimeters");

        jTextField5.setText("76");

        jLabel50.setText("<html>j; sj;l kjas fjs; dlfjs; kfjs ;dfj; as;fj skdj fs;dfj s;klf djslk jdf;s kjf; sd</html>");
        jLabel50.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        org.jdesktop.layout.GroupLayout alignToNickPanelLayout = new org.jdesktop.layout.GroupLayout(alignToNickPanel);
        alignToNickPanel.setLayout(alignToNickPanelLayout);
        alignToNickPanelLayout.setHorizontalGroup(
            alignToNickPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, alignToNickPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(alignToNickPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel50, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, alignToNickPanelLayout.createSequentialGroup()
                        .add(jLabel10)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel11))
                    .add(alignToNickPanelLayout.createSequentialGroup()
                        .add(jLabel12)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel13)))
                .addContainerGap())
        );
        alignToNickPanelLayout.setVerticalGroup(
            alignToNickPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, alignToNickPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel50, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(alignToNickPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(jLabel11)
                    .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(alignToNickPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(jLabel13)
                    .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jTabbedPane1.addTab("Align nick", alignToNickPanel);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("First alignment mark"));
        jLabel14.setText("X:");

        xDXFa1Field.setText("67");

        jLabel15.setText("millimeters");

        jLabel16.setText("Y:");

        yDXFa1Field.setText("99");

        jLabel17.setText("millimeters");

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jLabel14)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(xDXFa1Field, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel15))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jLabel16)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(yDXFa1Field, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel17)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(jLabel15)
                    .add(xDXFa1Field, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel16)
                    .add(jLabel17)
                    .add(yDXFa1Field, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel51.setText("<html>j; sj;l kjas fjs; dlfjs; kfjs ;dfj; as;fj skdj fs;dfj s;klf djslk jdf;s kjf; sd</html>");
        jLabel51.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        org.jdesktop.layout.GroupLayout DXFmarksPanelLayout = new org.jdesktop.layout.GroupLayout(DXFmarksPanel);
        DXFmarksPanel.setLayout(DXFmarksPanelLayout);
        DXFmarksPanelLayout.setHorizontalGroup(
            DXFmarksPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, DXFmarksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(DXFmarksPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel51, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        DXFmarksPanelLayout.setVerticalGroup(
            DXFmarksPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, DXFmarksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel51, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jTabbedPane1.addTab("DXF marks", DXFmarksPanel);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("First alignment mark"));
        xMODa1Label.setText("X:");

        xMODa1Field.setText("100");
        xMODa1Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xMODa1FieldActionPerformed(evt);
            }
        });

        xMODa1UnitsLabel.setText("millimeters");

        yMODa1Label.setText("Y:");

        yMODa1Field.setText("200");

        yMODa1UnitsLabel.setText("millimeters");

        org.jdesktop.layout.GroupLayout jPanel9Layout = new org.jdesktop.layout.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel9Layout.createSequentialGroup()
                        .add(xMODa1Label)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(xMODa1Field, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(xMODa1UnitsLabel))
                    .add(jPanel9Layout.createSequentialGroup()
                        .add(yMODa1Label)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(yMODa1Field, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(yMODa1UnitsLabel)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(xMODa1Label)
                    .add(xMODa1UnitsLabel)
                    .add(xMODa1Field, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(yMODa1Label)
                    .add(yMODa1UnitsLabel)
                    .add(yMODa1Field, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Second alignment mark"));
        xMODa2Label.setText("X:");

        xMODa2Field.setText("500");

        xMODa2UnitsLabel.setText("millimeters");

        yMODa2Label.setText("Y:");

        yMODa2Field.setText("500");

        yMODa2UnitsLabel.setText("millimeters");

        org.jdesktop.layout.GroupLayout jPanel10Layout = new org.jdesktop.layout.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel10Layout.createSequentialGroup()
                        .add(xMODa2Label)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(xMODa2Field, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(xMODa2UnitsLabel))
                    .add(jPanel10Layout.createSequentialGroup()
                        .add(yMODa2Label)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(yMODa2Field, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(yMODa2UnitsLabel)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(xMODa2Label)
                    .add(xMODa2UnitsLabel)
                    .add(xMODa2Field, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(yMODa2Label)
                    .add(yMODa2UnitsLabel)
                    .add(yMODa2Field, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel52.setText("<html>j; sj;l kjas fjs; dlfjs; kfjs ;dfj; as;fj skdj fs;dfj s;klf djslk jdf;s kjf; sd</html>");
        jLabel52.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        org.jdesktop.layout.GroupLayout millMarksPanelLayout = new org.jdesktop.layout.GroupLayout(millMarksPanel);
        millMarksPanel.setLayout(millMarksPanelLayout);
        millMarksPanelLayout.setHorizontalGroup(
            millMarksPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, millMarksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(millMarksPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel52, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        millMarksPanelLayout.setVerticalGroup(
            millMarksPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, millMarksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel52, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jTabbedPane1.addTab("Mill marks", millMarksPanel);

        jLabel30.setText("Glass thickness:");

        waferThicknessField.setText("1100");

        jLabel31.setText("microns");

        jLabel32.setText("Overdrill:");

        overdrillField.setText("400");

        jLabel33.setText("microns");

        jLabel34.setText("Peck distance:");

        peckDistanceField.setText("100");

        jLabel35.setText("microns");

        jLabel36.setText("Z speed:");

        zSpeedField.setText("0.01");

        jLabel37.setText("units");

        jLabel38.setText("Repeats per peck:");

        repeatsField.setText("3");

        serialDeviceLabel.setText("Mill serial device:");

        serialDeviceField.setText("/dev/ttyS0");

        jLabel40.setText("Z drill speed:");

        zDrillSpeedField.setText("0.01");

        org.jdesktop.layout.GroupLayout jPanel11Layout = new org.jdesktop.layout.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel11Layout.createSequentialGroup()
                        .add(serialDeviceLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(serialDeviceField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE))
                    .add(jPanel11Layout.createSequentialGroup()
                        .add(jLabel38)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(repeatsField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                    .add(jPanel11Layout.createSequentialGroup()
                        .add(jLabel36)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(zSpeedField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel37))
                    .add(jPanel11Layout.createSequentialGroup()
                        .add(jLabel34)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(peckDistanceField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel35))
                    .add(jPanel11Layout.createSequentialGroup()
                        .add(jLabel32)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(overdrillField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel33))
                    .add(jPanel11Layout.createSequentialGroup()
                        .add(jLabel30)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(waferThicknessField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel31))
                    .add(jPanel11Layout.createSequentialGroup()
                        .add(jLabel40)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(zDrillSpeedField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(141, Short.MAX_VALUE)
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel40)
                    .add(zDrillSpeedField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel30)
                    .add(jLabel31)
                    .add(waferThicknessField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel32)
                    .add(jLabel33)
                    .add(overdrillField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel34)
                    .add(jLabel35)
                    .add(peckDistanceField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel36)
                    .add(jLabel37)
                    .add(zSpeedField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel38)
                    .add(repeatsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(serialDeviceLabel)
                    .add(serialDeviceField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jTabbedPane1.addTab("Options", jPanel11);

        selectInputFileButton.setText("Select DXF file...");
        selectInputFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectInputFileButtonActionPerformed(evt);
            }
        });

        inputFileTextArea.setColumns(20);
        inputFileTextArea.setLineWrap(true);
        inputFileTextArea.setRows(5);
        inputFileTextArea.setText("no file selected");
        jScrollPane7.setViewportView(inputFileTextArea);

        org.jdesktop.layout.GroupLayout jPanel13Layout = new org.jdesktop.layout.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .add(selectInputFileButton))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .add(selectInputFileButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(192, Short.MAX_VALUE))
        );
        jTabbedPane1.addTab("Input file", jPanel13);

        inputPlot.setBackground(new java.awt.Color(255, 255, 255));
        inputPlot.setOpaque(true);

        jButton1.setText("Plot input file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Plot output file");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel54.setText("<html>j; sj;l kjas fjs; dlfjs; kfjs ;dfj; as;fj skdj fs;dfj s;klf djslk jdf;s kjf; sd</html>");
        jLabel54.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        org.jdesktop.layout.GroupLayout jPanel12Layout = new org.jdesktop.layout.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, inputPlot, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .add(jPanel12Layout.createSequentialGroup()
                        .add(jButton1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 112, Short.MAX_VALUE)
                        .add(jButton3))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel54, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPlot, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1)
                    .add(jButton3))
                .addContainerGap())
        );
        jTabbedPane1.addTab("Plot", jPanel12);

        nextButton.setText("Next  step \u2192");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        previousButton.setText("\u2190 Previous step");
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(previousButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 127, Short.MAX_VALUE)
                        .add(nextButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(previousButton)
                    .add(nextButton))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        BufferedImage image2=new BufferedImage(inputPlot.getWidth(),inputPlot.getHeight(),BufferedImage.TYPE_INT_ARGB);
        Graphics graphics2=image2.getGraphics();
        
        graphics2.setColor(Color.BLACK);
        
        for(int h=0; h<=holes;h++) {
            
            int xPlot=(int)(xMODholes[h] - xMODmin-0.05*(xMODmin-xMODmax));
            int yPlot=(int)(yMODholes[h] - yMODmin-0.05*(yMODmin-yMODmax));
                        
            xPlot=(int)(xPlot*inputPlot.getWidth() /(1.1*(xMODmax-xMODmin)));
            yPlot=(int)(yPlot*inputPlot.getHeight()/(1.1*(yMODmax-yMODmin)));
            
            //System.out.println("("+xDXFholes[h]+", "+yDXFholes[h]+")   ("+xPlot+", "+yPlot+")");
                        
            graphics2.fillOval( xPlot, yPlot, 5, 5 );
        }
        
        graphics2.dispose();
        inputPlot.setIcon(new ImageIcon(image2));
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void xMODa1FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xMODa1FieldActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_xMODa1FieldActionPerformed
    
    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
// TODO add your handling code here:
        aboutDialog.setSize(300,400);
        aboutDialog.setVisible(!aboutDialog.isVisible());
        
    }//GEN-LAST:event_aboutButtonActionPerformed
    
    private void selectInputFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectInputFileButtonActionPerformed
// TODO add your handling code here:
        
        jFileChooser1.showOpenDialog(this);
        inputFileTextArea.setText(jFileChooser1.getSelectedFile().toString());
        infile=jFileChooser1.getSelectedFile();
        
        
        
        
        // BIG PASTE STARTS HERE
        
        
        
        
        
        
        
        
        
        // define scaleFactor
        double scaleFactor=1;
        if(unitsCombo.getSelectedItem()=="Steps")
            scaleFactor = 1;
        else if(unitsCombo.getSelectedItem()=="Mils")
            scaleFactor = 0.984;
        else if(unitsCombo.getSelectedItem()=="Inches")
            scaleFactor = 0.000984;
        else if(unitsCombo.getSelectedItem()=="Millimeters")
            scaleFactor = 0.025;
        else if(unitsCombo.getSelectedItem()=="Microns")
            scaleFactor = 25.0;
        else if(unitsCombo.getSelectedItem()=="Centimeters")
            scaleFactor = 0.0025;
        
        //DXF coords are divided by scaleFactor
        double xDXFa1=Double.parseDouble(xDXFa1Field.getText())/scaleFactor;
        double yDXFa1=Double.parseDouble(yDXFa1Field.getText())/scaleFactor;
        //Coords from Modela are not scaled
        double xMODa1=Double.parseDouble(xMODa1Field.getText());
        double yMODa1=Double.parseDouble(yMODa1Field.getText());
        double xMODa2=Double.parseDouble(xMODa2Field.getText());
        double yMODa2=Double.parseDouble(yMODa2Field.getText());
        //Scale these as microns
        double waferThickness=Double.parseDouble(waferThicknessField.getText())/25.0;
        double overdrill=Double.parseDouble(overdrillField.getText())/25.0;
        double peckDistance=Double.parseDouble(peckDistanceField.getText())/25.0;
        //speeds aren't scaled
        double zSpeed=Double.parseDouble(zSpeedField.getText());
        double zDrillSpeed=Double.parseDouble(zDrillSpeedField.getText());
        
        int repeats=Integer.parseInt(repeatsField.getText());
        
        // these aren't read yet and must be scaled after reading from file
        double xDXF=0;
        double yDXF=0;
        double xMOD=0;
        double yMOD=0;
        
        
        try {
            FileReader fr = new FileReader(infile);
            BufferedReader in=new BufferedReader(fr);
            BufferedWriter out = new BufferedWriter(new FileWriter(infile.getParent()+File.separator+infile.getName()+".sh"));
            
            //HEADER
            //make this a shell script
            out.write("#!/bin/sh\n");
            //info lines
            out.write("echo 'Running "+infile.getName()+".sh'\n");
            Date d = new Date();
            out.write("echo 'generated "+d+" by modrilla v0.3'\n");
            //stty command
            out.write("stty 9600 raw -echo crtscts <"+serialDeviceField.getText()+"\n");
            //head down (z during PD) = 0 (at the top of the wafer)
            //head up (z during PU) = 500 (500 units above the top of the wafer)
            out.write("echo '!PZ0,500;!MC1;' > "+serialDeviceField.getText()+"\n");
            
            String line;
            int circles=0;
            //scanmode 0: looking for "CIRCLE"
            //scanmode 1: looking for " 10" (DXFx)
            //scanmode 2: read x
            //scanmode 3: looking for " 20" (DXFy)
            //scanmode 4: read y and convert (DXFx,DXFy)
            int scanmode=0;
            while ((line=in.readLine())!=null) {
                
                if(scanmode==2) {
                    xDXF=Double.parseDouble(line)/scaleFactor;
                    scanmode=3;
                } else if(scanmode==4) {
                    yDXF=Double.parseDouble(line)/scaleFactor;
                    
                    //conversion math
                    xMOD=xyMOD(xDXFa1, yDXFa1, xMODa1, yMODa1, xMODa2, yMODa2, xDXF, yDXF)[0];
                    yMOD=xyMOD(xDXFa1, yDXFa1, xMODa1, yMODa1, xMODa2, yMODa2, xDXF, yDXF)[1];
                    
                    //remember (xDXF,yDXF) and (xMOD,yMOD) for plotting later
                    xDXFholes[hole]=xDXF;
                    yDXFholes[hole]=yDXF;
                    xMODholes[hole]=xMOD;
                    yMODholes[hole]=yMOD;
                    holes=hole;
                    hole++;
                    
                    //if this is the first hole, then set MAX and MIN to these coordinates
                    if(holes==0) {
                        xDXFmax=xDXF;
                        xDXFmin=xDXF;
                        yDXFmax=yDXF;
                        yDXFmin=yDXF;
                        xMODmax=xMOD;
                        xMODmin=xMOD;
                        yDXFmax=yDXF;
                        yDXFmin=yDXF;
                    }
                    
                    //otherwise, check for new MAX and MIN coordinates
                    else {
                        //record new xDXFmax, xDXFmin, yDXFmax, and yDXFmin, if any
                        if(xDXF>xDXFmax) {xDXFmax=xDXF;}
                        if(xDXF<xDXFmin) {xDXFmin=xDXF;}
                        if(yDXF>yDXFmax) {yDXFmax=yDXF;}
                        if(yDXF<yDXFmin) {yDXFmin=yDXF;}
                        
                        //record new xMODmax, xMODmin, yMODmax, and yMODmin, if any
                        if(xMOD>xMODmax) {xMODmax=xMOD;}
                        if(xMOD<xMODmin) {xMODmin=xMOD;}
                        if(yMOD>yMODmax) {yMODmax=yMOD;}
                        if(yMOD<yMODmin) {yMODmin=yMOD;}
                    }
                                
                    
                    
                    
                    //report that we're drilling a hole at (xMOD,yMOD)
                    out.write("\necho 'Drilling hole "+circles+" at ("+(int)xMOD+","+(int)yMOD+")'\n");
                    
                    //consistent screw loading: move first to (xMOD-100,yMOD-100) absolute, head up
                    double xMODapproach=xMOD-100;
                    double yMODapproach=yMOD-100;
                    out.write("echo 'PA;PU"+(int)xMODapproach+","+(int)yMODapproach+";' > "+serialDeviceField.getText()+"\n");
                    
                    //now move to (xMOD,yMOD) absolute, head up
                    out.write("echo 'PA;PU"+(int)xMOD+","+(int)yMOD+";' > "+serialDeviceField.getText()+"\n");
                    
                    //drill by pecking, using RELATIVE coordinates in Z dimension
                    //lower quickly to wafer surface
                    out.write("echo 'PR;PD;' > "+serialDeviceField.getText()+"\n");
                    double depth=0;
                    while(depth<waferThickness+overdrill) {
                        
                        int repeat=0;
                        
                        while(repeat<repeats) {
                            
                            out.write("echo 'PR;");
                            
                            //lower quickly to previous drilled depth
                            out.write("!VZ"+zSpeed+";");
                            out.write("!ZM-"+(int)depth+";");
                            
                            //lower slowly one additional peck
                            out.write("!VZ"+zDrillSpeed+";");
                            out.write("!ZM-"+(int)peckDistance+";");
                            
                            //raise quickly to wafer surface
                            out.write("!VZ"+zSpeed+";");
                            out.write("!ZM"+(int)peckDistance+";");
                            out.write("!ZM"+(int)depth+";' > "+serialDeviceField.getText()+"\n");
                            
                            //record new peck repeat
                            repeat=repeat+1;
                        }
                        //record new depth
                        depth=depth+peckDistance;
                    }
                    
                    //raise head to PU position before going to next hole
                    //I don't think this is doing anything...
                    //out.write("PU;");
                    
                    //last thing, return to scanmode 0
                    scanmode=0;
                } else if(line.contains("CIRCLE")&&scanmode==0) {
                    scanmode=1; ++circles;
                } else if(line.contains(" 10")&&scanmode==1) {
                    scanmode=2;
                } else if(line.contains(" 20")&&scanmode==3) {
                    scanmode=4;
                }
            }
            //graceful shutdown
            out.write("echo 'PA;PU1000,1000;!MC0;' > "+serialDeviceField.getText()+"\n");
            
            //statusLabel.setText("Converted "+circles+" holes");
            
            out.close();
        } catch (IOException ioe) {}
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        // BIG PASTE ENDS HERE
        
        
    }//GEN-LAST:event_selectInputFileButtonActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        BufferedImage image=new BufferedImage(inputPlot.getWidth(),inputPlot.getHeight(),BufferedImage.TYPE_INT_ARGB);
        Graphics graphics=image.getGraphics();
        
        graphics.setColor(Color.BLACK);
        
        for(int h=0; h<=holes;h++) {
            
            int xPlot=(int)(xDXFholes[h] - xDXFmin-0.05*(xDXFmin-xDXFmax));
            int yPlot=(int)(-yDXFholes[h] - yDXFmin-0.05*(yDXFmin-yDXFmax));
                        
            xPlot=(int)(xPlot*inputPlot.getWidth() /(1.1*(xDXFmax-xDXFmin)));
            yPlot=(int)(yPlot*inputPlot.getHeight()/(1.1*(yDXFmax-yDXFmin)));
            
            //System.out.println("("+xDXFholes[h]+", "+yDXFholes[h]+")   ("+xPlot+", "+yPlot+")");
                        
            graphics.fillOval( xPlot, yPlot, 5, 5 );
        }
        
        graphics.dispose();
        inputPlot.setIcon(new ImageIcon(image));
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
// TODO add your handling code here:
        if(jTabbedPane1.getSelectedIndex()==0) {
            previousButton.setEnabled(false);
        } else {
            previousButton.setEnabled(true);
        }
        if(jTabbedPane1.getSelectedIndex()==jTabbedPane1.getComponentCount()-1) {
            nextButton.setEnabled(false);
        } else {
            nextButton.setEnabled(true);
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged
    
    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
// TODO add your handling code here:
        if(jTabbedPane1.getSelectedIndex()>0) {
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getSelectedIndex()-1);
        }
        if(jTabbedPane1.getSelectedIndex()==0) {
            previousButton.setEnabled(false);
        } else {
            previousButton.setEnabled(true);
        }
        if(jTabbedPane1.getSelectedIndex()==jTabbedPane1.getComponentCount()-1) {
            nextButton.setEnabled(false);
        } else {
            nextButton.setEnabled(true);
        }
    }//GEN-LAST:event_previousButtonActionPerformed
    
    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
// TODO add your handling code here:
        if(jTabbedPane1.getSelectedIndex()<jTabbedPane1.getComponentCount()-1) {
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getSelectedIndex()+1);
        }
        if(jTabbedPane1.getSelectedIndex()==0) {
            previousButton.setEnabled(false);
        } else {
            previousButton.setEnabled(true);
        }
        if(jTabbedPane1.getSelectedIndex()==jTabbedPane1.getComponentCount()-1) {
            nextButton.setEnabled(false);
        } else {
            nextButton.setEnabled(true);
        }
    }//GEN-LAST:event_nextButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new modrilla().setVisible(true);
            }
        });
    }
    
    
    public static double [] xyMOD(double xDXFa1, double yDXFa1, double xMODa1, double yMODa1, double xMODa2, double yMODa2, double xDXF, double yDXF) {
        double fuzz=1.0;
        if(yDXF==yDXFa1) { yDXF=yDXF+fuzz; }
        if(xDXF==xDXFa1) { xDXF=xDXF+fuzz; }
        double theta=Math.atan( (yMODa2-yMODa1) / (xMODa2-xMODa1) );
        double phi=Math.atan( (yDXF-yDXFa1) / (xDXF-xDXFa1) );
        double r=(xDXF-xDXFa1)/Math.cos(phi);
        double xMOD=(r*Math.cos(theta+phi))+xMODa1;
        double yMOD=(r*Math.sin(theta+phi))+yMODa1;
        double [] xyMOD={xMOD,yMOD};
        return xyMOD;
    }
    
    File infile=null;
    
    double [] xDXFholes = new double [100];
    double [] yDXFholes = new double [100];
    double [] xMODholes = new double [100];
    double [] yMODholes = new double [100];
    private double xDXFmax=0.0;
    private double xDXFmin=0.0;
    private double yDXFmax=0.0;
    private double yDXFmin=0.0;
    private double xMODmax=0.0;
    private double xMODmin=0.0;
    private double yMODmax=0.0;
    private double yMODmin=0.0;
    private int holes=0;
    private int hole=0;
    
    private int x=0;
    private int y=0;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DXFmarksPanel;
    private javax.swing.JButton aboutButton;
    private javax.swing.JDialog aboutDialog;
    private javax.swing.JPanel alignToNickPanel;
    private javax.swing.JComboBox alignmentModeCombo;
    private javax.swing.JLabel alignmentModeLabel;
    private javax.swing.JPanel drillNickPanel;
    private javax.swing.JTextArea inputFileTextArea;
    private javax.swing.JLabel inputPlot;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JPanel millMarksPanel;
    private javax.swing.JComboBox millUnitsCombo;
    private javax.swing.JLabel millUnitsLabel;
    private javax.swing.JButton nextButton;
    private javax.swing.JComboBox outputFileFormatCombo;
    private javax.swing.JLabel outputFileFormatLabel;
    private javax.swing.JTextField overdrillField;
    private javax.swing.JTextField peckDistanceField;
    private javax.swing.JButton previousButton;
    private javax.swing.JTextField repeatsField;
    private javax.swing.JButton selectInputFileButton;
    private javax.swing.JTextField serialDeviceField;
    private javax.swing.JLabel serialDeviceLabel;
    private javax.swing.JLabel setupLabel;
    private javax.swing.JPanel setupPanel;
    private javax.swing.JComboBox unitsCombo;
    private javax.swing.JLabel unitsLabel;
    private javax.swing.JTextField waferThicknessField;
    private javax.swing.JTextField xDXFa1Field;
    private javax.swing.JTextField xMODa1Field;
    private javax.swing.JLabel xMODa1Label;
    private javax.swing.JLabel xMODa1UnitsLabel;
    private javax.swing.JTextField xMODa2Field;
    private javax.swing.JLabel xMODa2Label;
    private javax.swing.JLabel xMODa2UnitsLabel;
    private javax.swing.JTextField yDXFa1Field;
    private javax.swing.JTextField yMODa1Field;
    private javax.swing.JLabel yMODa1Label;
    private javax.swing.JLabel yMODa1UnitsLabel;
    private javax.swing.JTextField yMODa2Field;
    private javax.swing.JLabel yMODa2Label;
    private javax.swing.JLabel yMODa2UnitsLabel;
    private javax.swing.JTextField zDrillSpeedField;
    private javax.swing.JTextField zSpeedField;
    // End of variables declaration//GEN-END:variables
    
}
